- hosts: stompbox
  gather_facts: true
  tasks:

## Directories and linked files from sync folder
  - name: Create directories
    file:
      dest: "{{ item }}"
      state: directory
    with_items:
      - /home/ubuntu/.ssh
      - /home/ubuntu/Downloads

  - name: Create softlinks to config files
    file:
      dest: "{{ item.dest }}" # where the link should go
      src: "{{ item.src }}" # what's being linked to
      state: link
    with_items:
      - { dest: "/home/ubuntu/GitHub", src: "{{codebases}}"}
      - { dest: "/home/ubuntu/.vim", src: "{{stompbox_home}}/vim"}
      - { dest: "/home/ubuntu/.vimrc", src: "{{stompbox_home}}/vimrc"}
      - { dest: "/home/ubuntu/.boto", src: "{{stompbox_home}}/boto"}
      - { dest: "/home/ubuntu/.gitconfig", src: "{{stompbox_home}}/gitconfig"}

## Install packages, including docker
  - name: Add apt key for docker
    apt_key:
      keyserver: "hkp://ha.pool.sks-keyservers.net"
      id: "58118E89F3A912897C070ADBF76221572C52609D"

  - name: Add Docker repo to /etc/apt list
    apt_repository:
      repo: "{{ docker_repo }}"
      state: present

  - name: Install packages with Aptitude (there's a lot of these, give it a second)
    apt:
      name: "{{ item }}"
      state: present
      update_cache: yes
    with_items:
      - "{{ apt_installs }}"

  - name: Start Docker daemon
    service:
      name: docker
      state: started

## Install Terraform
## NOTE: See the README for known issues regarding running Terraform on Linux guest / Windows host
  - name: Get Terraform zip
    get_url:
      url: https://releases.hashicorp.com/terraform/0.7.13/terraform_0.7.13_linux_amd64.zip
      dest: /tmp/terraform_0.7.13_linux_amd64.zip
      mode: 0644

  - name: Untar Terraform to /usr/bin
    unarchive:
      src: /tmp/terraform_0.7.13_linux_amd64.zip
      dest: /usr/local/bin

  - name: Clean up Terraform archive
    file:
      path: /tmp/terraform_0.7.13_linux_amd64.zip
      state: absent

## Set up git configuration
  - name: Check if /home/ubuntu/.ssh/id_rsa exists
    stat:
      path: /home/ubuntu/.ssh/id_rsa
    register: ssh_key_exists

  - name: Generate new SSH key for github
    command: ssh-keygen -t rsa -b 4096 -C "jsgoller1@gmail.com" -f /home/ubuntu/.ssh/id_rsa -q -N ""
    when: ssh_key_exists.stat.exists == false

  - name: Ignore future changes to boto file (prevent accidental committing AWS creds)
    command: git update-index --skip-worktree /stompbox/GitHub/stompbox/ssh/boto
    args:
      chdir: /stompbox/Github/stompbox
